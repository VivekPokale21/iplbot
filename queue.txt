import java.io.*;
import java.util.*;
class Fac{
        String fid,fname;int numapp,numphd;
        Fac(String id,String n,int pub,int phd){
                fid=id;
                fname=n;
                numapp=pub;
                numphd=phd;
        }
}
class lab2
{
  static int size, front, rear;
  static ArrayList < Fac > queue = new ArrayList <> ();
    lab2 (int size)
  {
    this.size = size;
    this.front = this.rear = -1;
  }
  static void enQueue (Fac data)
  {
    if ((front == 0 && rear == size - 1)
        || (rear == (front - 1) % (size - 1)))
      {
        System.out.print ("Queue is Full");
      }
    else if (front == -1)
      {
        front = 0;
        rear = 0;
        queue.add (rear, data);
      }
    else if (rear == size - 1 && front != 0)
      {
        rear = 0;
        queue.set (rear, data);
      }
    else
      {
        rear = (rear + 1);
        if (front <= rear)
          queue.add (rear, data);
        else
          queue.set (rear, data);
      }
  }
  public Fac deQueue ()
  {
    Fac temp = queue.get (front);
    if (front == -1)
      {
        System.out.print ("Queue is Empty");
        return temp;
      }
    if (front == rear)
      {
        front = -1;
        rear = -1;
      }
    else if (front == size - 1)
      {
        front = 0;
      }
    else
      {
        front = front + 1;
      }
    return temp;
  }
  public void display ()
  {
    if (front == -1)
      {
        System.out.print ("Queue is Empty");
        return;
      }
    if (rear >= front)
      {
        for (int i = front; i <= rear; i++)
          {
            Fac temp = queue.get (i);
            System.out.println (temp.fid + " " + temp.fname + " " +
                                temp.numapp + " " + temp.numphd);
          }
      }
    else
      {
        for (int i = front; i < size; i++)
          {
            Fac temp = queue.get (i);
            System.out.println (temp.fid + " " + temp.fname + " " +
                                temp.numapp + " " + temp.numphd);
          }
        for (int i = 0; i <= rear; i++)
          {
            Fac temp = queue.get (i);
            System.out.println (temp.fid + " " + temp.fname + " " +
                                temp.numapp + " " + temp.numphd);
          }
        System.out.println ();
      }
  }
  public static void main (String[]args) throws FileNotFoundException
  {
    lab2 q = new lab2 (5);
    Scanner rf = new Scanner (new File ("facin.dat"));
    PrintWriter wf = new PrintWriter (new File ("facout.dat"));
    while (rf.hasNextLine ())
      {
        StringTokenizer s = new StringTokenizer (rf.nextLine (), " ");
        while (s.hasMoreTokens ())
          {
            q.enQueue (new
                       Fac (s.nextToken (), s.nextToken (),
                            Integer.parseInt (s.nextToken ()),
                            Integer.parseInt (s.nextToken ())));
          }
      }
    q.display ();
    for (int i = 0; i < 5; i++)
      {
        Fac t = q.deQueue ();
        if (t.numapp < 10)
          System.out.println (t.fname);
        wf.write (t.fid + "\t" + t.fname + "\t" + t.numapp + "\t" + t.numphd +
                  "\n");
      }
     wf.close ();
  }
}
